{% assign collection = collections['all'] %}
<script>var collectionProducts = {{ collection.products | json }};</script>
{% comment %} {% assign current_variant = product.selected_or_first_available_variant %} {% endcomment %}
{% comment %} {% assign featured_image = current_variant.featured_image | default: product.featured_image %} {% endcomment %}

<div id="quantity-product-id"></div>

<div class="mx-auto mb-28">
  <div class="lg:border border-black border-t border-x-0 lg:!w-[1024px]">
    <div class="flex flex-col lg:flex-row px-[10px] mt-[3.5rem] gap-y-3 w-[100%] border-b lg:border-b-0 border-black pb-[20px] lg:pb-0">
      <div class="flex flex-row lg:w-[20%]">
        <h1 class="text-4xl font-bold">{{ collection.title }}</h1>
        <button class="hamburger">
          <svg width="30px" height="20px" viewBox="0 0 20.00 20.00" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <title>hamburger</title> <desc>Created with Sketch Beta.</desc> <defs> </defs> <g id="Page-1" stroke-width="0.0002" fill="none" fill-rule="evenodd" sketch:type="MSPage"> <g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-212.000000, -888.000000)" fill="#000000"> <path d="M230,904 L214,904 C212.896,904 212,904.896 212,906 C212,907.104 212.896,908 214,908 L230,908 C231.104,908 232,907.104 232,906 C232,904.896 231.104,904 230,904 L230,904 Z M230,896 L214,896 C212.896,896 212,896.896 212,898 C212,899.104 212.896,900 214,900 L230,900 C231.104,900 232,899.104 232,898 C232,896.896 231.104,896 230,896 L230,896 Z M214,892 L230,892 C231.104,892 232,891.104 232,890 C232,888.896 231.104,888 230,888 L214,888 C212.896,888 212,888.896 212,890 C212,891.104 212.896,892 214,892 L214,892 Z" id="hamburger" sketch:type="MSShapeGroup"> </path> </g> </g> </g></svg>
        </button>
      </div>

      <div class="flex flex-row lg:w-[80%] justify-between">
        <div class="flex flex-row gap-x-2">
          <a class="" href="javascript&colon;history.back()">
            <div class="border border-black py-[3px] px-[8px] h-[32px]">BACK</div>
          </a>
          <a href="{{ paginate.next.url }}">
            <div class="border border-black py-[3px] px-[8px] h-[32px]">NEXT</div>
          </a>
        </div>
        <div class="flex flex-row gap-x-2">
          <div id="cartbtn" class="border border-black py-[3px] px-[8px] h-[32px] cursor-pointer">
            <a>CART</a>
          </div>
          <div class="buckscc-currency-box border border-black py-[3px] px-[8px] h-[32px]"></div>
        </div>
      </div>
    </div>

    <div class="flex lg:flex-row lg:p-[10px] lg:w-[100%] mt-0">
      <div class="hide lg:flex w-[20%] border border-black" id="navbarProduct">
        <nav role="navigation">
          {% for link in linklists.main-menu.links %}
            <div class="widget-left-bar">
              <a href="/" {% if link.active %}aria-current="page"{% endif %}>
                <h2 class="font-boldz">{{ link.title }}</h2>
              </a>
              {% if link.links != blank %}
                <ul class="product-list">
                  {% for child_link in link.links %}
                    <li>
                      <a href="{{ child_link.url }}" {% if child_link.active %}aria-current="page"{% endif %}>
                        {{ child_link.title }}
                      </a>
                      {% if child_link.links != blank %}
                        <ul>
                          {% for grandchild_link in child_link.links %}
                            <li>
                              <a href="{{ grandchild_link.url }}" {% if grandchild_link.active %}aria-current="page"{% endif %}>
                                {{ grandchild_link.title }}
                              </a>
                            </li>
                          {% endfor %}
                        </ul>
                      {% endif %}
                    </li>
                  {% endfor %}
                </ul>
              {% endif %}
            </div>
          {% endfor %}
        </nav>
      </div>

      <div class="lg:w-[80%] border-b border-black lg:border lg:border-s-0">
        <div class="mobile-product-page">
          <div class="sub-left-bar">
            <div class="gap-1">
            {% if product.selected_or_first_available_variant.featured_image %}
              {%  assign featured = product.selected_or_first_available_variant.featured_image %}
              <img id="product-image" src="{{ featured | image_url }}"/>
            {% else %}
              {%  assign featured = product.featured_image %}
              <img id="product-image" src="{{ featured | image_url }}"/>
            {% endif %}
              
              <ul class="product-image-thumbs gap-[10px] mt-[10px] w-[90vw] sm:w-full">
                {%  for image in product.images %}  
                  <li class="{% if image == featured %}selected{% endif %}"><img src="{{ image | image_url: master }}"/></li>
                {% endfor %}
              </ul>
            </div>
          </div>
          <div class="sub-right-bar">
            <div class="gap-1">
              <script>
                $(document).ready(function() {
                    // Double-check the ID of the footer element:
                    var vendorElement = $('#vendorProduct');
                    var captureUrlWindows = window.location.origin; // Use location.origin for the domain

                    // Assuming dataCollectionProducts is accessible here
                    var productVendor = "{{ product.vendor }}"; // Example vendor name
                    // Convert the vendor name to lowercase
                    var vendor = productVendor.toLowerCase();
                    // Replace spaces with hyphens
                    vendor = vendor.replace(/\s+/g, '-');
                    vendorElement.html(productVendor);
                    vendorElement.attr("href", captureUrlWindows + '/collections/' + vendor);
                });
              </script>
              <a id="vendorProduct" class="text-s flex my-auto gap-x-2 opacity-50"></a>
              <h1 class="text-2xl font-regular">{{ product.title }}</h1>
              <div class="text-2xl product-prices" id="product-prices"></div>
              <br>
              <div>{{ product.description }}</div>

              {% form 'product', product %}
                <input id="product-id" type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

                {% if product.variants.size > 1 %}
                <div class="flex flex-wrap justify-center">
                  {% for option in product.options_with_values %}
                    <fieldset style="display: flex; border: none; flex-direction;flex-flow: inherit;">
                      {% for value in option.values %}
                        {% assign variant = product.variants | where: option.name, value | first %}
                        <div class="product-variant">
                          <input
                            {% if option.selected_value == value %}checked="checked"{% endif %}
                            type="radio"
                            name="{{ option.name }}"
                            value="{{ value }}"
                            id="{{ option.name | handleize }}-{{ value | handleize }}"
                          {% comment %}
                        {% unless product.variants[].available %}disabled{% endunless %}
                          {% endcomment %}>
                          <label for="{{ option.name | handleize }}-{{ value | handleize }}">
                            {{ value }}
                          </label>
                        </div>
                      {% endfor %}
                    </fieldset>
                  {% endfor %}
                </div>
                {% endif %}

                <div id="quantity-product-id"></div>

                <div class="hide">
                  <label for="quantity">Quantity</label>
                  <input
                    id="quantity"
                    name="quantity"
                    value="1"
                    class="product-quantity">
                </div>

                <button class="py-[7px] w-full mt-[20px] mb-[40px] border border-black text-lg font-semibold" {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %} type="submit" id="AddToCart">
                  {% if product.selected_or_first_available_variant.available %}
                    Add to Cart
                  {% else %}
                    Out of Stock
                  {% endif %}
                </button>
              {% endform %}


            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="flex lg:flex-row flex-col-reverse justify-between px-[10px] pb-[10px] items-center gap-4 lg:gap-0">
      <script>
        $(document).ready(function() {
          // Double-check the ID of the footer element:
          var footerElement = $('#footerPages');

          // Check if the element exists before appending:
          if (footerElement.length > 0) {
            var captureUrlWindows = window.location.origin; // Use location.origin for the domain

            // Clear existing content if needed (replace with .append() to add after):
            footerElement.html(
              '<a class="hover:underline hover:underline-offset-4" href="' + captureUrlWindows + '/pages/about">About</a>' +
              '<a>•</a>' +
              '<a class="hover:underline hover:underline-offset-4" href="' + captureUrlWindows + '/pages/privacy-policy">Privacy & Policy</a>' +
              '<a>•</a>' +
              '<a class="hover:underline hover:underline-offset-4" href="' + captureUrlWindows + '/pages/terms-conditions">Terms & Conditions</a>' +
              '<a>•</a>' +
              '<a class="hover:underline hover:underline-offset-4" href="' + captureUrlWindows + '/pages/contact">Contact</a>'
            );
          } else {
            console.error("Element with ID '#footerPages' not found.");
          }
        });
      </script>
      <div id="footerPages" class="flex flex-row gap-x-[10px] justify-evenly w-full lg:justify-normal lg:w-fit">
      </div>
      
    </div>
  </div>
</div>

<script>
  var product = {{ product | json }};

  // variant product handler
  document.querySelectorAll('.product-option input[type="radio"]').forEach(radio => {
    // disable options with quantity 0
    radio.addEventListener('change', () => {

      // find selection option
      var selectedOptions = [];

      document.querySelectorAll('.product-option input[type="radio"]:checked').forEach(radio => {
        selectedOptions.push(radio.value);
      })

      // finding the matched variant
      var matchedVariant = product.variants.find(variant => {
        var pass = true;

        for (var i = 0; i < selectedOptions.length; i++) {
          if (selectedOptions.indexOf(variant.options[i]) === -1) {
            pass = false;
            break;
          }
        }
        return pass;
      })

      // change product form variant id
      document.querySelector('#product-id').value = matchedVariant.id;

      // change url for variant
      var url = new URLParse(window.location.href, true);
      url.query.variant = matchedVariant.id;
      window.history.replaceState(null, null, url.toString());

      // change button
      var add = document.querySelector("#AddToCart")

      if (matchedVariant.available){
        add.textContent = "Add to Cart"
        add.disabled = false
      } else {
        add.textContent = "Out of Stock"
        add.disabled = true
      }
    })
  })
  
  // image product handler
  document.querySelectorAll('.product-image-thumbs li').forEach(li => {
    li.addEventListener('click', () => {
      document.querySelector('.product-image-thumbs li.selected').classList.remove('selected')
      li.classList.add('selected')

      document.querySelector('#product-image').setAttribute('src', li.querySelector('img').getAttribute('src'))
    })
  })

  // change url to /cart page
  document.addEventListener('DOMContentLoaded', function() {
    var addToCartButton = document.querySelector('#AddToCart');
    addToCartButton.addEventListener('click', function(event) {
      window.onload = function() {
        // Delay the reload for a second
        setTimeout(function() {
          minicart.classList.toggle('is-active');
          //location.reload();
        }, 0);
      };
      
    });
  });

  // variant product out of stock
  //
  
  // get element for nav brand & type product
  document.getElementById("navbarProduct").classList.add("min-h-["+ (280 * 2) +"px]");
</script>

<script>
  $(document).ready(function() {
    // update product price
    function UpdateProductPrices() {
      if (product.compare_at_price > product.price) {
        $("#product-prices").html(
          '<p class="_compare-price">'+formatCurrency(product.compare_at_price/100, document.querySelector('.bucks-selected').textContent)+'</p>'+
          '<br>'+
          '<p class="_original-price">'+formatCurrency(product.price/100, document.querySelector('.bucks-selected').textContent)+'</p>'
        );
      } else {
        $("#product-prices").html(
          '<p class="_original-price">'+formatCurrency(product.price/100, document.querySelector('.bucks-selected').textContent)+'</p>'
        );
      }
    } setInterval(UpdateProductPrices, 1000);

    UpdateProductPrices();
  });
  
</script>

<script>
  // Define the formatCurrency function
  function formatCurrency(price, currency) {
    // Get the text inside the span with the class "bucks-selected"
    var spanText = document.querySelector('.bucks-selected').textContent;

    // Output the text to the console
    currency = spanText;

    // Define conversion rates from USD to other currencies
    var conversionRates = {
      'IDR': 16000, // Example conversion rate from USD to IDR
      'EUR': 1,     // Example conversion rate from USD to EUR
      // 'USD': 1,
      // Add conversion rates for other currencies as needed
    };

    // Convert price to IDR if the currency is USD or EUR
    if (conversionRates[currency]) {
      price = Math.floor(price) * conversionRates[currency];
      price = Math.ceil(price); // Round the price up to the nearest whole number
    }

    var formatter = new Intl.NumberFormat('en-EN', {
      style: 'currency',
      currency: currency,
    });
    return formatter.format(price);
  }

  // Your existing JavaScript code
  document.addEventListener('DOMContentLoaded', function() {
    // Your existing code goes here...
  });
</script>