{% comment %} 
  Config untuk column & row Produk

  Untuk menentukan banyaknya baris 
  {% assign column_product = 2 %}

  Untuk menentukan banyaknya item di tiap barisnya
  {% assign row_product = 4 %}
{% endcomment %}

{% assign column_product = 3 %}
{% assign row_product = 4 %}

{% assign input_column_product = column_product %}
{% assign input_row_product = row_product %}


{% comment %} make sure length of products {% endcomment %}
{% assign query_product = 0 %}

{% for product in collection.products%}
  {% if product.available %}
    {% if input_column_product == 0 %}
      {% break %}
    {% endif %}

    {% assign query_product = query_product |  plus: 1 %}
    {% assign input_row_product = input_row_product | minus: 1 %}

    {% if input_row_product == 0 and input_column_product >= 1 %}
      {% assign input_row_product = input_row_product | plus: row_product %}
      {% assign input_column_product = input_column_product |  minus: 1 %}
    {% endif %}
  {% endif %}
{% endfor %}

{% paginate collection.products by query_product %}

<div class="mx-auto mb-28">
  <div class="lg:border border-black border-y border-x-0 !w-screen lg:!w-[1024px]">
    <div class="flex flex-col lg:flex-row px-[10px] mt-[3.5rem] gap-y-3 w-[100%] border-b lg:border-b-0 border-black pb-[20px] lg:pb-0">
      <div class="flex flex-row lg:w-[20%]">
        <h1 class="text-4xl font-bold">{{ collection.title }}</h1>
        <button class="hamburger">
          <svg width="30px" height="20px" viewBox="0 0 20.00 20.00" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <title>hamburger</title> <desc>Created with Sketch Beta.</desc> <defs> </defs> <g id="Page-1" stroke-width="0.0002" fill="none" fill-rule="evenodd" sketch:type="MSPage"> <g id="Icon-Set-Filled" sketch:type="MSLayerGroup" transform="translate(-212.000000, -888.000000)" fill="#000000"> <path d="M230,904 L214,904 C212.896,904 212,904.896 212,906 C212,907.104 212.896,908 214,908 L230,908 C231.104,908 232,907.104 232,906 C232,904.896 231.104,904 230,904 L230,904 Z M230,896 L214,896 C212.896,896 212,896.896 212,898 C212,899.104 212.896,900 214,900 L230,900 C231.104,900 232,899.104 232,898 C232,896.896 231.104,896 230,896 L230,896 Z M214,892 L230,892 C231.104,892 232,891.104 232,890 C232,888.896 231.104,888 230,888 L214,888 C212.896,888 212,888.896 212,890 C212,891.104 212.896,892 214,892 L214,892 Z" id="hamburger" sketch:type="MSShapeGroup"> </path> </g> </g> </g></svg>
        </button>
      </div>

      <div class="flex flex-row lg:w-[80%] justify-between">
        <div class="flex flex-row gap-x-2">
          <a href="{{ paginate.previous.url }}">
            <div class="border border-black py-[3px] px-[8px] h-[32px]">BACK</div>
          </a>
          <a href="{{ paginate.next.url }}">
            <div class="border border-black py-[3px] px-[8px] h-[32px]">NEXT</div>
          </a>
        </div>
        <div class="flex flex-row gap-x-2">
          <div id="cartbtn" class="border border-black py-[3px] px-[8px] h-[32px] cursor-pointer">
            <a>CART</a>
          </div>
          <div class="buckscc-currency-box border border-black py-[3px] px-[8px] h-[32px]"></div>
        </div>
      </div>
    </div>

    <div class="flex lg:flex-row lg:p-[10px] lg:w-[100%] mt-[30px] lg:mt-0">
      <div class="hide lg:flex w-[20%] border border-black" id="navbarProduct">
        <nav role="navigation">
          {% for link in linklists.main-menu.links %}
            <div class="widget-left-bar">
              <a href="/" {% if link.active %}aria-current="page"{% endif %}>
                <h2 class="text-3xl font-bold">{{ link.title }}</h2>
              </a>
              {% if link.links != blank %}
                <ul class="product-list">
                  {% for child_link in link.links %}
                    <li>
                      <a href="{{ child_link.url }}" {% if child_link.active %}aria-current="page"{% endif %}>
                        {{ child_link.title }}
                      </a>
                      {% if child_link.links != blank %}
                        <ul>
                          {% for grandchild_link in child_link.links %}
                            <li>
                              <a href="{{ grandchild_link.url }}" {% if grandchild_link.active %}aria-current="page"{% endif %}>
                                {{ grandchild_link.title }}
                              </a>
                            </li>
                          {% endfor %}
                        </ul>
                      {% endif %}
                    </li>
                  {% endfor %}
                </ul>
              {% endif %}
            </div>
          {% endfor %}
        </nav>
      </div>
      <div class="w-full lg:w-[80%]">
        <ul id="products-list" class="flex flex-wrap gap-0"></ul>
      </div>
    </div>
    <div class="flex lg:flex-row flex-col-reverse justify-between px-[10px] pb-[10px] items-center gap-4 lg:gap-0">
      <script>
        $(document).ready(function() {
          // Double-check the ID of the footer element:
          var footerElement = $('#footerPages');

          // Check if the element exists before appending:
          if (footerElement.length > 0) {
            var captureUrlWindows = window.location.origin; // Use location.origin for the domain

            // Clear existing content if needed (replace with .append() to add after):
            footerElement.html(
              '<a href="' + captureUrlWindows + '/pages/about">About</a>' +
              '<a>•</a>' +
              '<a href="' + captureUrlWindows + '/pages/privacy-policy">Privacy & Policy</a>' +
              '<a>•</a>' +
              '<a href="' + captureUrlWindows + '/pages/terms-conditions">Terms & Conditions</a>' +
              '<a>•</a>' +
              '<a href="' + captureUrlWindows + '/pages/contact">Contact</a>'
            );
          } else {
            console.error("Element with ID '#footerPages' not found.");
          }
        });
      </script>
      <div id="footerPages" class="flex flex-row gap-x-[10px] justify-evenly w-full lg:justify-normal lg:w-fit">
      </div>
      <div class="">
        <div class="page-number">{{ paginate | default_pagination: next: ' ', previous: ' ' }}</div>
      </div>
    </div>
  </div>
</div>

{% endpaginate %}

<script>
  var collectionProducts = {{ collection.products | json }};
  var dataCollectionProducts = [];
  
  // get the available products
  for (let i = 0; i < collectionProducts.length; i++) {
    if (collectionProducts[i].available == true) {
      dataCollectionProducts.push(collectionProducts[i]);
    }
  }
  
  // sorting of available products by created at
  dataCollectionProducts.sort(function(a, b) {
    if (a.created_at > b.created_at) {
      return -1;
    } else if (a.created_at < b.created_at) {
      return 1;
    } else {
      return 0;
    }
  });

  // Retrieve the last displayed page number from localStorage (if available)
  // put parameter url now
  const queryUrlString = window.location.search;
  const urlParams = new URLSearchParams(queryUrlString);

  // Retrieve the last displayed page number from localStorage (if available)
  let pagePaginate = 0;
  if(Number(urlParams.get('page')) > 0) {
    pagePaginate = Number(urlParams.get('page')) - 1; // for make the first index of paginate start by 0
  }
  
  // back button
  $(document).on('click', '#back-page', function() {
    if (pagePaginate == 0) {
      console.log("page number 1 mtfck");
    } else {
      pagePaginate -= 1;
      console.log("back button clicked");
      console.log("page number -1 mtfck");
      updateProductList(); // Display the previous page of products
    }
  });
  
  // next button
  $(document).on('click', '#next-page', function() {
    if (dataCollectionProducts.length / 8 <= pagePaginate * 8) {
      console.log("next page is undefined mtfck");
    } else {
      pagePaginate += 1;
      console.log("next button clicked");
      console.log("page number +1 mtfck");
      updateProductList(); // Display the next page of products
    }
  });
  
  // Function to update the product list
  function updateProductList() {
    let shopLink = window.location.origin + window.location.pathname;
    let productsList = document.getElementById('products-list');
    productsList.innerHTML = ""; // Clear the existing product list
    let displayed_products_top = 0;
  
    // Preload the product list items
    for (let j = 0 + (pagePaginate * 8); j < (pagePaginate + 1) * 8; j++) {
      let listItem = document.createElement('li');
  
      if (displayed_products_top < {{ row_product }}) {
        listItem.classList.add('border','flex','grow','max-w-[42vw]','h-max-[17vw]','mx-auto','!h-auto','!mx-[4%]','!mb-[4%]','lg:!mx-[0]','lg:!mb-[0]','lg:!border-s-0','!border-black','!min-w-[0%]');
      } else {
        listItem.classList.add('border','flex','grow','max-w-[42vw]','h-max-[17vw]','mx-auto','!h-auto','!mx-[4%]','!mb-[4%]','lg:!mx-[0]','lg:!mb-[0]','lg:!border-s-0','!border-black','!min-w-[0%]');
        listItem.classList.add('border-product-5','flex','grow','max-w-[42vw]','h-max-[17vw]','mx-auto','!h-auto','!mx-[4%]','!mb-[4%]','lg:!mx-[0]','lg:!mb-[0]','lg:!border-s-0','!border-black','!border-t','lg:!border-t-0','!min-w-[0%]');
      } displayed_products_top++;
  
      let productLink = document.createElement('a');
      productLink.classList.add('product-card');
      productLink.href = shopLink+"/products/"+dataCollectionProducts[j].handle;
  
      let productImage = document.createElement('img');
      productImage.classList.add('product-image');
      productImage.src = dataCollectionProducts[j].featured_image;

      let productVendor = document.createElement('a');
      productVendor.classList.add('text-xs','opacity-60');
      productVendor.innerHTML = dataCollectionProducts[j].vendor + '<br>';
      // Get the vendor name from dataCollectionProducts[j]
      let vendor = dataCollectionProducts[j].vendor;
      // Convert the vendor name to lowercase
      vendor = vendor.toLowerCase();
      // Replace spaces with hyphens
      vendor = vendor.replace(/\s+/g, '-');
      productVendor.href = window.location.origin + '/collections/' + vendor;

      let productText = document.createElement('p');
      productText.classList.add('text-product');
      productText.innerHTML = dataCollectionProducts[j].title.substr(0, 38) + '<br>';
  
      let priceSpan = document.createElement('span');
      priceSpan.classList.add('original-price');
  
      let childPriceSpan = document.createElement('span');
      childPriceSpan.classList.add('money');
      childPriceSpan.innerHTML = dataCollectionProducts[j].price / 100; // for rounded 2 zero after coma
  
      let comparePriceSpan = document.createElement('span');
      comparePriceSpan.classList.add('compare-price');
  
      let childComparePriceSpan = document.createElement('span');
      childComparePriceSpan.classList.add('money');
  
      if (dataCollectionProducts[j].compare_at_price > dataCollectionProducts[j].price) {
        childComparePriceSpan.innerHTML = dataCollectionProducts[j].compare_at_price / 100; // for rounded 2 zero after coma
        productText.appendChild(comparePriceSpan);
        comparePriceSpan.appendChild(childComparePriceSpan);
        priceSpan.innerHTML = '<br>';
      }
  
      priceSpan.appendChild(childPriceSpan);
      productText.appendChild(priceSpan);
      productLink.appendChild(productImage);
      productLink.appendChild(productVendor);
      productLink.appendChild(productText);
      listItem.appendChild(productLink);
  
      productsList.appendChild(listItem);
    }
    localStorage.setItem('currentPage', pagePaginate);
  }

  // Initial load of the product list
  document.addEventListener('DOMContentLoaded', updateProductList);

  // get element for nav brand & type product
  document.getElementById("navbarProduct").classList.add("h-["+ (314 * {{ column_product }}) +"px]");
  
</script> 